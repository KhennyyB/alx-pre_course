;; bo-tcrc.mim -- Tibetan input method with TCRC keyboard layout
;; Copyright (C) 2006, 2007
;;   National Institute of Advanced Industrial Science and Technology (AIST)
;;   Registration Number H15PRO112

;; This file is part of the m17n database; a sub-part of the m17n
;; library.

;; The m17n library is free software; you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation; either version 2.1 of
;; the License, or (at your option) any later version.

;; The m17n library is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with the m17n library; if not, write to the Free
;; Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

(input-method bo tcrc)

(description "Tibetan input method using the TCRC keyboard layout.
For more information, see the page:
  http://www.tibet.net/tb/download/tcrckbd.rtf
")

(title "ཀ")
(map
 (map
  ("!" "༑")
  ("@" "༄")
  ("#" "༄༅")
  ("^" "྾")
  ("&" "༼")
  ("*" "༽")
  ("_" "ཱྀ")
  ("+" "ཾ")
  ("|" "༈")

  ("`" "༌")
  ("1" "༡")
  ("2" "༢")
  ("3" "༣")
  ("4" "༤")
  ("5" "༥")
  ("6" "༦")
  ("7" "༧")
  ("8" "༨")
  ("9" "༩")
  ("0" "༠")
  ("-" "ྀ")
  ("=" "ྃ")
  ("\\" "༔")

  ("Q" (cond ((= @-1 0x0F84) (delete @-1) "ྛ") (1 "ཋ")))
  ("W" "ྭ")
  ("E" "ཻ")
  ("R" (cond ((= @-1 0x0F84) (delete @-1) "ྲ྄") (1 "ར྄")))
  ("T" (cond ((= @-1 0x0F84) (delete @-1) "ྠ") (1 "ཐ")))
  ("Y" "-")
  ("U" "ཱུ")
  ("I" "ཱི")
  ("O" "ཽ")
  ("P" (cond ((= @-1 0x0F84) (delete @-1) "ྥ") (1 "ཕ")))
  ("{" "`")
  ("}" "+")

  ("q" (cond ((= @-1 0x0F84) (delete @-1) "ྚ") (1 "ཊ")))
  ("w" (cond ((= @-1 0x0F84) (delete @-1) "ྭ") (1 "ཝ")))
  ("e" "ེ")
  ("r" (cond ((= @-1 0x0F84) (delete @-1) "ྲ") (1 "ར")))
  ("t" (cond ((= @-1 0x0F84) (delete @-1) "ྟ") (1 "ཏ")))
  ("y" (cond ((= @-1 0x0F84) (delete @-1) "ྱ") (1 "ཡ")))
  ("u" "ུ")
  ("i" "ི")
  ("o" "ོ")
  ("p" (cond ((= @-1 0x0F84) (delete @-1) "ྤ") (1 "པ")))
  ("[" "'")
  ("]" ",")

  ("A" (cond ((= @-1 0x0F84) (delete @-1) "ྸ") (1 "ཨ")))
  ("S" (cond ((= @-1 0x0F84) (delete @-1) "ྴ") (1 "ཤ")))
  ("D" (cond ((= @-1 0x0F84) (delete @-1) "ྫ") (1 "ཛ")))
  ("F" (cond ((= @-1 0x0F84) (delete @-1) "ྡྷ") (1 "དྷ")))
  ("G" (cond ((= @-1 0x0F84) (delete @-1) "ྒྷ") (1 "གྷ")))
  ("H" "ྷ")
  ("J" (cond ((= @-1 0x0F84) (delete @-1) "ྫྷ") (1 "ཛྷ")))
  ("K" (cond ((= @-1 0x0F84) (delete @-1) "ྑ") (1 "ཁ")))
  ("L" (cond ((= @-1 0x0F84) (delete @-1) "ླ྄") (1 "ལ྄")))
  (":" "ཿ")
  ("\"" "ཱ")

  ("a" "྄")
  ("s" (cond ((= @-1 0x0F84) (delete @-1) "ྶ") (1 "ས")))
  ("d" (cond ((= @-1 0x0F84) (delete @-1) "ྡ") (1 "ད")))
  ("f" (cond ((= @-1 0x0F84) (delete @-1) "ྔ") (1 "ང")))
  ("g" (cond ((= @-1 0x0F84) (delete @-1) "ྒ") (1 "ག")))
  ("h" (cond ((= @-1 0x0F84) (delete @-1) "ྷ") (1 "ཧ")))
  ("j" (cond ((= @-1 0x0F84) (delete @-1) "ྗ") (1 "ཇ")))
  ("k" (cond ((= @-1 0x0F84) (delete @-1) "ྐ") (1 "ཀ")))
  ("l" (cond ((= @-1 0x0F84) (delete @-1) "ླ") (1 "ལ")))
  (";" (cond ((= @-1 0x0F84) (delete @-1) "ྜྷ") (1 "ཌྷ")))
  ("'" (cond ((= @-1 0x0F84) (delete @-1) "ྰ") (1 "འ")))

  ("Z" (cond ((= @-1 0x0F84) (delete @-1) "ྮ") (1 "ཞ")))
  ("X" (cond ((= @-1 0x0F84) (delete @-1) "ྪ") (1 "ཚ")))
  ("C" (cond ((= @-1 0x0F84) (delete @-1) "ྖ") (1 "ཆ")))
  ("V" (cond ((= @-1 0x0F84) (delete @-1) "ྞ") (1 "ཎ")))
  ("B" (cond ((= @-1 0x0F84) (delete @-1) "ྦྷ") (1 "བྷ")))
  ("N" (cond ((= @-1 0x0F84) (delete @-1) "ྙ") (1 "ཉ")))
  ("M" (cond ((= @-1 0x0F84) (delete @-1) "ྵ") (1 "ཥ")))
  ("<" "ླ")
  (">" (cond ((= @-1 0x0F84) (delete @-1) "ྲ྄") (1 "ཪ྄")))
  ("?" (cond ((= @-1 0x0F84) (delete @-1) "ྶ྄") (1 "ས྄")))

  ("z" (cond ((= @-1 0x0F84) (delete @-1) "ྯ") (1 "ཟ")))
  ("x" (cond ((= @-1 0x0F84) (delete @-1) "ྩ") (1 "ཙ")))
  ("c" (cond ((= @-1 0x0F84) (delete @-1) "ྕ") (1 "ཅ")))
  ("v" (cond ((= @-1 0x0F84) (delete @-1) "ྜ") (1 "ཌ")))
  ("b" (cond ((= @-1 0x0F84) (delete @-1) "ྦ") (1 "བ")))
  ("n" (cond ((= @-1 0x0F84) (delete @-1) "ྣ") (1 "ན")))
  ("m" (cond ((= @-1 0x0F84) (delete @-1) "ྨ") (1 "མ")))
  ("." "ྲ")
  ("," "ྱ")
  ("/"
   (cond ((| (= @-1 0x0F44) (= @-1 0x0F94)) "་"))
   "།")

  (" "
   (cond ((& (| (= @-2 0x0F42) (= @-2 0x0F92)) (= @-1 0x0F0B)) (delete @-1))
	 (1 "་")))
  ))

(state
 (init
  (map)))

;; Local Variables:
;; coding: utf-8
;; mode: emacs-lisp
;; End:
