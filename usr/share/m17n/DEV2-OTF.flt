;; DEV2-OTF.flt -- Font Layout Table for dev2 OpenType fonts
;; Copyright (C) 2010 AIST (H15PRO112)
;; See the end for copying conditions.

(font layouter dev2-otf nil
      (version "1.6.0")
      (font (nil nil unicode-bmp :otf=dev2)))

;;; <li> DEV2-OTF.flt
;;;
;;; For dev2 OpenType fonts to draw the Devanagari script.  

;; No matter what the Microsoft Typography web page says, modifier
;; character sequences accepted by Uniscribe are the following.

;; 1. matra (pre, below, above, post)
;; 2. one of candrabindu (0901), anusvara (0902), grave (0953), acute (0954)
;; 3. udatta (0951) and/or anudatta (0952)
;; 4. visarga (0903)

;; For rendering, on the other hand, the combination of Uniscribe and
;; mangal.ttf (dev2) requires the following orders.

;; for above marks:
;; 1. above- or post matra
;; 2. reph
;; 3. one of candrabindu (0901), anusvara (0902), grave (0953), acute (0954)
;; 4. udatta (0951)

;; for below marks:
;; 1. below matra
;; 2. anudatta (0952)

(category
 ;; X: generic
 ;; V: independent vowel
 ;; C: consonant
 ;; R: RA
 ;; n: NUKTA
 ;; H: HALANT
 ;; m: vowel sign (pre)
 ;; u: vowel sign (above)
 ;; b: vowel sign (below)
 ;; p: vowel sign (post)
 ;; a: vowel modifier / accent (above)
 ;; A: vowel modifier (post)
 ;; s: stress sign (above)
 ;; S: stress sign (below)
 ;; N: ZWNJ
 ;; J: ZWJ
 (0x0900 0x097F	?X)			; generic
 (0x0900 0x0902	?a)			; SIGN INVERTED CANDRABINDU .. ANUSVARA
 (0x0903	?A)			; SIGN VISARGA
 (0x0904 0x0914	?V)			; LETTER SHORT A .. AU
 (0x0915 0x0939	?C)			; LETTER KA .. HA
 (0x0930	?R)			; LETTER RA
 (0x093C	?n)			; SIGN NUKTA
 (0x093E	?p)			; VOWEL SIGN AA
 (0x093F	?m)			; VOWEL SIGN I
 (0x0940	?p)			; VOWEL SIGN II
 (0x0941 0x0944	?b)			; VOWEL SIGN UU .. VOCALIC RR
 (0x0945 0x0948	?u)			; VOWEL SIGN CANDRA E .. AI
 (0x0949 0x094C	?p)			; VOWEL SIGN CANDRA O .. AU
 (0x094D	?H)			; SIGN VIRAMA
 (0x094E	?m)			; VOWEL SIGN PRISHTHAMATRA E
 (0x0951	?s)			; STRESS SIGN UDATTA
 (0x0952	?S)			; STRESS SIGN ANUDATTA
 (0x0953 0x0954	?a)			; GRAVE ACCENT .. ACUTE ACCENT
 (0x0955	?u)			; VOWEL SIGN CHANDRA LONG E
 (0x0958 0x095F	?C)			; LETTER QA .. YYA
 (0x0960 0x0961	?V)			; LETTER VOCALIC RR  .. VOCALIC LL
 (0x0962 0x0963	?b)			; VOWEL SIGN VOCALIC L .. VOCALIC LL
 (0x0972	?V)			; LETTER CANDRA A
 (0x0979 0x097F	?C)			; LETTER ZHA .. BBA

 (0x200C	?N)			; ZWNJ
 (0x200D	?J)			; ZWJ
 (0x25CC	?X)			; DOTTED CIRCLE

 (rphf		?r)
 )

;; Stage 0
;; Preprocessing
(generator
 (0
  (cond
   ;; Compose a consonant and a nukta
   ((0x0928 0x093C) 0x0929)
   ((0x0930 0x093C) 0x0931)
   ((0x0933 0x093C) 0x0934)
   ((0x0915 0x093C) 0x0958)
   ((0x0916 0x093C) 0x0959)
   ((0x0917 0x093C) 0x095A)
   ((0x091C 0x093C) 0x095B)
   ((0x0921 0x093C) 0x095C)
   ((0x0922 0x093C) 0x095D)
   ((0x092B 0x093C) 0x095E)
   ((0x092F 0x093C) 0x095F)

   ("." =))
  *))

;; Stage 1
;; Syllable identification
(generator
 (0
  (cond
   ;; Syllables with an independent vowel
   ("(RH)?Vn?(J?HR)?m?u?b?p?n?a?(Ss?|sS?)?A?"
    < | = * | >)

   ;; Consonant-based syllables
   ("([CR]n?J?HJ?)*[CR]n?(H[NJ]?|m?u?b?p?n?)a?(Ss?|sS?)?A?"
    < | = * | >)

   ;; Combining marks are displayed with a DOTTED CIRCLE.
   ("m"
    (cond
     ((font-facility 0x25CC) < = 0x25CC >)
     ("." [ = ])))
   ("[nHubpaSsA]"
    (cond
     ((font-facility 0x25CC) < 0x25CC = >)
     ("." [ = ])))
   ("JHR"
    (cond
     ((font-facility 0x25CC) < 0x25CC :otf=dev2=blwf+ >)
     (".+" [ :otf=dev2=blwf+ ])))

   ("." =))
  *))

;; Stage 2
;; Basic shaping forms and matra reordering
(generator
 (0
  (cond
   ;; Explicit halant form starting with RA + H + ZWJ
   (" (RHJ[CRnHJ]+)(HN?a?(Ss?|sS?)?A?) "
    | (1 :otf=dev2=locl,nukt,akhn,rkrf,blwf,half,vatu,cjct+) (2 = *) |)

   ;; Explicit halant form starting with a reph
   (" (RH)([CRnHJ]+)(HN?a?(Ss?|sS?)?A?) "
    | (1 :otf=dev2=rphf+) (2 :otf=dev2=locl,nukt,akhn,rkrf,blwf,half,vatu,cjct+)
    (3 = *) |)

   ;; Other explicit halant forms
   (" ([CRnHJ]+)(HN?a?(Ss?|sS?)?A?) "
    | (1 :otf=dev2=locl,nukt,akhn,rkrf,blwf,half,vatu,cjct+) (2 = *) |)

   ;; Ordinary syllables starting with RA + H + ZWJ
   ;; 1            2     3
   (" (RHJ[CRnHJ]*)(mn?)?(u?b?p?n?a?(Ss?|sS?)?A?) "
    ;;           |
    ;; This is an asterisk.  If it were a plus sign, an isolated RHJ
    ;; would match with the next pattern, not with this one.
    | (2 = *) (1 :otf=dev2=locl,nukt,akhn,rkrf,blwf,half,vatu,cjct+)
    (3 = *) |)

   ;; Ordinary syllables starting with a reph
   ;; 1   2          3     4
   (" (RH)([CRnHJV]+)(mn?)?(u?b?p?n?a?(Ss?|sS?)?A?) "
    | (3 = *) (1 :otf=dev2=rphf+)
    (2 :otf=dev2=locl,nukt,akhn,rkrf,blwf,half,vatu,cjct+)
    (4 = *) |)
   
   ;; Other ordinary syllables
   ;; 1          2     3
   (" ([CRnHJV]+)(mn?)?(u?b?p?n?a?(Ss?|sS?)?A?) "
    | (2 = *) (1 :otf=dev2=locl,nukt,akhn,rkrf,blwf,half,vatu,cjct+)
    (3 = *) |)

   ("." =))
  *))    

;; Stage 3
;; Final reordering #1 (Move pre-base matra after the last halant)
(generator
 (0
  (cond
   ;; 1    2            3
   (" (mn?)([^ ]+H[JS]?)([^H ]+) "
    | (2 = *) (1 = *) (3 = *) |)

   ("." =))
  *))

;; Stage 4
;; Final reordering #2 (Move reph after the first halant)
(generator
 (0
  (cond
   ;; Syllables with a reph and an explicit halant
   ;; 1     2  3          4
   (" (mn?)?(r)([^H ]+HJ?)([^ ]*) "
    | (1 = *) (3 = *) (2 =) (4 = *) |)

   ;; A reph without explicit halant
   ;; 1     2  3          4  5
   (" (mn?)?(r)([^aSsA ]+)(a?(Ss?|sS?)?A?) "
    | (1 = *) (3 = *) (2 =) (4 = *) |)

   ("." =))
  *))

;; Stage 5
;; Nukta for matra and presentation forms
(generator
 (0
  (cond
   (" ([^ ]+) "
    | (1 :otf=dev2=nukt,pres,abvs,blws,psts,haln,calt+) |)

   ("." =))
  *))

;; Stage 6
;; Remove ZWNJ/ZWJ
(generator
 (0
  (cond
   ("[NJ]")

   ("." =))
  *))

;; Stage 7
;; GPOS processing
(generator
 (0
  (cond
   (" ([^ ]+) "
    (1 :otf=dev2=+kern,dist,abvm,blwm))

   ("." =))
  *))

;; Copyright (C) 2010
;;   National Institute of Advanced Industrial Science and Technology (AIST)
;;   Registration Number H15PRO112

;; This file is part of the m17n database; a sub-part of the m17n
;; library.

;; The m17n library is free software; you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation; either version 2.1 of
;; the License, or (at your option) any later version.

;; The m17n library is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with the m17n library; if not, write to the Free
;; Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

;; Local Variables:
;; mode: emacs-lisp
;; End:
