;; GURU-OTF.flt -- Font Layout Table for Gurmukhi OpenType fonts
;; Copyright (C) 2004, 2007, 2008, 2010 AIST (H15PRO112)
;; See the end for copying conditions.

(font layouter guru-otf nil
      (version "1.6.0")
      (font (nil nil unicode-bmp :otf=guru)))

;;; <li> GURU-OTF.flt
;;;
;;; For Gurmukhi OpenType fonts to draw the Gurmukhi script.

(category
 ;; B: consonants that have a below form
 ;; C: consonants that do not
 (0x0A00 0x0A7F	?X)			; generic
 (0x0A01 0x0A02	?a)			; SIGN ADAK BINDI .. BINDI
 (0x0A03	?A)			; SIGN VISARGA
 (0x0A05 0x0A14	?V)			; LETTER A .. AU
 (0x0A15 0x0A38 ?C)			; LETTER KA .. SA
 (0x0A2F	?Y)			; LETTER YA
 (0x0A30	?B)			; LETTER RA
 (0x0A35	?B)			; LETTER VA
 (0x0A39	?B)			; LETTER HA
 (0x0A3C	?n)			; SIGN NUKTA
 (0x0A3E	?p)			; VOWEL SIGN AA
 (0x0A3F	?m)			; VOWEL SIGN I
 (0x0A40	?p)			; VOWEL SIGN II
 (0x0A41 0x0A42	?b)			; VOWEL SIGN U .. UU
 (0x0A47 0x0A4C	?u)			; VOWEL SIGN EE .. AU
 (0x0A4D	?H)			; SIGN VIRAMA
;; (0x0A51	?)			; SIGN UDAAT
 (0x0A59 0x0A5E	?C)			; LETTER KHHA .. FA
 (0x0A70	?a)			; TIPPI
 (0x0A71	?d)			; ADDAK
;; (0x0A75	?)			; SIGN YAKASH

 (0x200C	?N)			; ZWNJ
 (0x200D	?J)			; ZWJ
 (0x25CC	?X)			; DOTTED CIRCLE

 (pstf		?P)
 )

;; Stage 0
;; Preprocessing
(generator
 (0
  (cond
   ;; Compose a consonant and a nukta
   ((0x0A32 0x0A3C) 0x0A33)
   ((0x0A38 0x0A3C) 0x0A36)
   ((0x0A16 0x0A3C) 0x0A59)
   ((0x0A17 0x0A3C) 0x0A5A)
   ((0x0A1C 0x0A3C) 0x0A5B)
   ((0x0A2B 0x0A3C) 0x0A5E)
   ("." =))
  *))

;; Stage 1
;; Syllable identification
(generator
 (0
  (cond
   ;; Consonant-based syllables
   ;;1       23                  4
   ("([CBY]n?((J?H|HJ?)[CBY]n?)*)(H[NJ]?|m?u?b?p?n?a?A?)"
    < |
    (cond
     (".+HJ$" :otf=guru=nukt,akhn+)
     ("(.+)(H)N?$" (1 :otf=guru=nukt,akhn+) (2 =) 0x200C)
     (".+" :otf=guru=nukt,akhn+))
    | >)

   ;; Syllables with an independent vowel
   ("(Vn?)((J?H[BY])?m?u?b?p?n?a?A?)"
    < | (1 :otf=guru=nukt+) (2 = *) | >)

   ;; Combining marks are displayed with a DOTTED CIRCLE.
   ("m"
    (cond
     ((font-facility 0x25CC) < = 0x25CC >)
     ("." [ = ])))
   ("[nHubpaA]"
    (cond
     ((font-facility 0x25CC) < 0x25CC = >)
     ("." [ = ])))

   ;; Isolated blwf and pstf are displayed with a DOTTED CIRCLE in the
   ;; next stage.
   ("(J)(H)([BY])"
    < | (1 =) (3 =) (2 =) | >)

   ("." =))
  *))

;; Stage 2
;; Reorder halant for blwf and pstf
(generator
 (0
  (cond
   ;; Isolated blwf and pstf
   ;; Saab.ttf uses vatu instead of blwf.
   (" J([BY]H) "
    (cond
     ((font-facility 0x25CC) < 0x25CC (1 :otf=guru=blwf,pstf,vatu+) >)
     (" J([BYR]H) " [ (1 :otf=guru=blwf,pstf,vatu+) ])))

   ;; Syllables with an overt halant
   (" ([^ ]+)(HN) "
    | (1 reorder) (2 = =) |)

   ;; Ordinary syllables
   (" ([^mubpaA ]+)(m?u?b?p?n?a?A?) "
    | (1 reorder) (2 = *) |)

   ("." =))
  *)

 (reorder
  ("(.|.+([^YJ]|JY|HJ))((J?HY)*)$"
   (1 reorder-B *) (3 reorder-Y *)))

 (reorder-B
  (cond
   ("J?(H)(B)"
    (2 =) (1 =))
   ("." =)))

 (reorder-Y
  ("J?(H)(Y)"
   (2 =) (1 =)))
 )

;; Stage 3
;; Language forms and matra reordering
(generator
 (0
  (cond
   ;; Overt halant forms
   (" ([^ ]+)(HN) "
    | (1 b4post) (1 post) (2 = =) |)

   ;; Other syllables
   ;; 1            2     3     4     5     6   7
   (" ([^mubpaA ]*)(mn?)?(un?)?(bn?)?(pn?)?(a)?(A)? "
    | (2 = *) (1 b4post) (4 = *) (3 = *) (6 =) (1 post) (5 = *) (7 =) |)

   ("." =))
  *)

 (b4post
  (cond
   ("(.H)J?(.*)"
    (1 :otf=guru=half+)
    (2 ("(.|.+([^YH]|JY|BH))((YH)*)$" (1 lang-forms *))))
   ("(.|.+([^YH]|JY|BH))((YH)*)"
    (1 lang-forms *))))

 (lang-forms
  (cond
   ("(.H)J" (1 :otf=guru=half+))
   (".H" :otf=guru=blwf,half,vatu+)
   ("." =)))

 (post
  ("(.|.+([^YH]|JY|BH))((YH)+)$"
   ;; lohit_pa.ttf uses psts instead of pstf for YA.
   (3 :otf=guru=pstf+psts)))
 )

;; Stage 4
;; Final reordering (Move pre-base matra after the last halant)
(generator
 (0
  (cond
   ;; 1    2         3
   (" (mn?)([^ ]+HJ?)([^H ]+) "
    | (2 = *) (1 = *) (3 = *) |)

   ("." =))
  *))

;; Stage 5
;; Nukta for matra and Presentation forms
(generator
 (0
  (cond
   (" ([^ ]+) "
    ;; lohit_pa.ttf uses vatu instead of blws.
    | (1 :otf=guru=nukt,vatu,pres,abvs,blws,psts,haln+) |)

   ("." =))
  *))

;; Stage 6
;; Remove ZWNJ/ZWJ
(generator
 (0
  (cond
   ("[NJ]")

   ("." =))
  *))

;; Stage 7
;; GPOS processing
(generator
 (0
  (cond
   (" ([^ ]+) "
    (1 :otf=guru=+abvm,blwm,dist))

   ("." =))
  *))

;; Copyright (C) 2004, 2007, 2008, 2010
;;   National Institute of Advanced Industrial Science and Technology (AIST)
;;   Registration Number H15PRO112

;; This file is part of the m17n database; a sub-part of the m17n
;; library.

;; The m17n library is free software; you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation; either version 2.1 of
;; the License, or (at your option) any later version.

;; The m17n library is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with the m17n library; if not, write to the Free
;; Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

;; Local Variables:
;; mode: emacs-lisp
;; End:
