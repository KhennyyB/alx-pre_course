;; GUR2-OTF.flt -- Font Layout Table for gur2 OpenType fonts
;; Copyright (C) 2010 AIST (H15PRO112)
;; See the end for copying conditions.

(font layouter gur2-otf nil
      (version "1.6.0")
      (font (nil nil unicode-bmp :otf=gur2)))

;;; <li> GUR2-OTF.flt
;;;
;;; For gur2 OpenType fonts to draw the Gurmukhi script.

(category
 (0x0A00 0x0A7F	?X)			; generic
 (0x0A01 0x0A02	?a)			; SIGN ADAK BINDI .. BINDI
 (0x0A03	?A)			; SIGN VISARGA
 (0x0A05 0x0A14	?V)			; LETTER A .. AU
 (0x0A15 0x0A38 ?C)			; LETTER KA .. SA
 (0x0A3C	?n)			; SIGN NUKTA
 (0x0A3E	?p)			; VOWEL SIGN AA
 (0x0A3F	?m)			; VOWEL SIGN I
 (0x0A40	?p)			; VOWEL SIGN II
 (0x0A41 0x0A42	?b)			; VOWEL SIGN U .. UU
 (0x0A47 0x0A4C	?u)			; VOWEL SIGN EE .. AU
 (0x0A4D	?H)			; SIGN VIRAMA
;; (0x0A51	?)			; SIGN UDAAT
 (0x0A59 0x0A5E	?C)			; LETTER KHHA .. FA
 (0x0A70	?a)			; TIPPI
 (0x0A71	?d)			; ADDAK
;; (0x0A75	?)			; SIGN YAKASH

 (0x200C	?N)			; ZWNJ
 (0x200D	?J)			; ZWJ
 (0x25CC	?X)			; DOTTED CIRCLE

 (pstf		?P)
 )

;; Stage 0
;; Preprocessing
(generator
 (0
  (cond
   ;; Compose a consonant and a nukta
   ((0x0A32 0x0A3C) 0x0A33)
   ((0x0A38 0x0A3C) 0x0A36)
   ((0x0A16 0x0A3C) 0x0A59)
   ((0x0A17 0x0A3C) 0x0A5A)
   ((0x0A1C 0x0A3C) 0x0A5B)
   ((0x0A2B 0x0A3C) 0x0A5E)
   ("." =))
  *))

;; Stage 1
;; Syllable identification
(generator
 (0
  (cond
   ;; Consonant-based syllables
   ("(Cn?J?HJ?)*Cn?(H[NJ]?|m?u?b?p?n?)a?A?"
    < | = * | >)

   ;; Syllables with an independent vowel
   ("Vn?(J?HC)?m?u?b?p?n?a?A?"
    < | = * | >)

   ;; Combining marks are displayed with a DOTTED CIRCLE.
   ("m"
    (cond
     ((font-facility 0x25CC) < = 0x25CC >)
     ("." [ = ])))
   ("[nHubpaA]"
    (cond
     ((font-facility 0x25CC) < 0x25CC = >)
     ("." [ = ])))
   ("JHC"
    (cond
     ((font-facility 0x25CC) < 0x25CC :otf=gur2=blwf,pstf+ >)
     (".+" [ :otf=gur2=blwf,pstf+ ])))

   ("." =))
  *))

;; Stage 2
;; Basic shaping forms and matra reordering
(generator
 (0
  (cond
   ;; Explicit halant forms
   (" ([CnHJ]+)(HN?a?A?) "
    (1 :otf?gur2=locl,nukt,akhn,blwf,pstf+)
    | (1 shaping) (2 = *) |)

   ;; Ordinary syllables
   ;; 1          2    3     4     5     6
   (" ([CnHJV]+)(mn?)?(un?)?(bn?)?(pn?)?(a?A?) "
    (1 :otf?gur2=locl,nukt,akhn,blwf,pstf+)
    | (2 = *) (1 shaping) (4 = *) (3 = *) (5 = *) (6 = *) |)

   ("." =))
  *)

 (shaping
  (cond
   ("([CnHJP]*[CV]n?)((J?PP)+)$"
    (1 :otf=gur2=locl,nukt,akhn,blwf,cjct+) (2 :otf=gur2=pstf+))
   (".+"
    (0 :otf=gur2=locl,nukt,akhn,blwf,cjct+))))
 )

;; Stage 3
;; Final reordering (Move pre-base matra after the last halant)
(generator
 (0
  (cond
   ;; 1    2         3
   (" (mn?)([^ ]+HJ?)([^H ]+) "
    | (2 = *) (1 = *) (3 = *) |)

   ("." =))
  *))

;; Stage 4
;; Nukta for matra and presentation forms
(generator
 (0
  (cond
   (" ([^ ]+) "
    | (1 :otf=gur2=nukt,pres,abvs,blws,psts,haln,calt+) |)

   ("." =))
  *))

;; Stage 5
;; Remove ZWNJ/ZWJ
(generator
 (0
  (cond
   ("[NJ]")

   ("." =))
  *))

;; Stage 6
;; GPOS processing
(generator
 (0
  (cond
   (" ([^ ]+) "
    (1 :otf=gur2=+kern,dist,abvm,blwm))

   ("." =))
  *))

;; Copyright (C) 2010
;;   National Institute of Advanced Industrial Science and Technology (AIST)
;;   Registration Number H15PRO112

;; This file is part of the m17n database; a sub-part of the m17n
;; library.

;; The m17n library is free software; you can redistribute it and/or
;; modify it under the terms of the GNU Lesser General Public License
;; as published by the Free Software Foundation; either version 2.1 of
;; the License, or (at your option) any later version.

;; The m17n library is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; Lesser General Public License for more details.

;; You should have received a copy of the GNU Lesser General Public
;; License along with the m17n library; if not, write to the Free
;; Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
;; Boston, MA 02110-1301, USA.

;; Local Variables:
;; mode: emacs-lisp
;; End:
